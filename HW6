m=matrix(c(7,2,9,4,12,13), ncol=3, nrow=2)
n <- matrix(1:24, ncol=4)
x <- n[c(1,2,3),c(1,2,3,4)] 
y <- m%*%x
y
#[,1] [,2] [,3] [,4]
#[1,]   61  229  397  565
#[2,]   49  163  277  391

d <- data.frame("id" =1:5,"name" =c("Peter","Amy","Ryan","Gary","Michelle"),"salary"= c(623.30, 515.20, 611.00,729.00,843.25))
d
cbind(d,"department"=c("IT","Accounting","Sales","HR","MGMT"))
d
df<-d[c(1,3,5),2:3]
df

h<- c(623.30,729.90,843.35)
l<-c("Peter","Gary","Michelle")
barplot(h,names.arg=l,col="blue")

colors<-c("Blue","Red","Green")
pie(h,label=h,main="Salaries of Employees", col=colors)
legend("topleft",l,fill=colors)

user_hand<-c("nothing")
possible_choices<-c('rock','paper','scissors')
valid <-function(){for (x in choices) { if (x==user_hand) {print("valid input")} }} 
valid()

user_score=0
comp_score=0
result="win"
scoreboard <- function() {if (result=="win") {player_score=player_score+1} else if (result=="loss") {comp_score=comp_score+1} print("Player Score:", player_score,"Computer Score:",comp_score)}

#Here is the entirety of my python code for reference:

def inputs():    
    import random
    global user_hand, possible_choices, comp_hand
    user_hand=input('\nSubmit your choice (rock, paper, or scissors):') #Asks the user for their choice
    possible_choices=['rock','paper','scissors'] #A list of the possible inputs
    comp_hand=random.choice(possible_choices) #The computer chooses at random
def valid():
    global user_hand
    global possible_choices
    if user_hand not in possible_choices:
        user_hand=input('Invalid input, please try again. Input rock, paper, or scissors:')
        valid()
def judge():
    global user_hand, user_score, comp_score
    if user_hand == comp_hand: #If the user's and computer's choice is the same, it is a tie
        print('Both Players threw',user_hand,'It is a tie!')
    elif user_hand == 'rock': #All the elif statements decide if the user wins or loses, prints out the result, and updates the score
        if comp_hand=='scissors':
            print('Rock crushes Scissors, you win!')
            user_score=user_score+1
        else:
            print('Paper covers Rock, you lose :(')
            comp_score=comp_score+1
    elif user_hand == 'paper':
        if comp_hand=='rock':
            print('Paper covers Rock, you win!')
            user_score=user_score+1
        else:
            print('Scissors cuts Paper, you lose :(')
            comp_score=comp_score+1
    elif user_hand == 'scissors':
        if comp_hand=='paper':
            print('Scissors cuts Paper, you win!')
            user_score=user_score+1
        else:
            print('Rock crushes Scissors, you lose :(')
            comp_score=comp_score+1
def score():    
    global comp_score, user_score
    print("\nThe score is\nUser:",user_score,'\nComputer:',comp_score)
    play_again=input('\nWant to play again? Type a. Want to play again but reset the score? Type r.') #Asks the used if they want to play again
    if play_again == 'a':#Restarts the game without resetting the score
        playagain()
    elif play_again == 'r': #Resets the score and restarts the game
        main()
    else:
        print("Okay, thanks for playing! The final score was \nUser:",user_score,'\nComputer',comp_score)#Ends the game
def main():
    global user_score, comp_score
    user_score=0 #Sets the scores at 0
    comp_score=0
    inputs()#Starts game
    valid()
    judge()
    score() 
def playagain():
    global comp_score, user_score
    inputs()
    valid()
    judge()
    score()
